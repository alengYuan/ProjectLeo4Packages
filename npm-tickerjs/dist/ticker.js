const e=1e3,n=n=>n*e,a=n=>60*n*e,r=n=>60*n*60*e,o=n=>24*n*60*60*e,i={get(e,i){switch(i){case"millisecond":case"second":case"minute":case"hour":case"day":case"fps":return((e,i)=>({millisecond:e.value,second:n(e.value),minute:a(e.value),hour:r(e.value),day:o(e.value),fps:e.value}[i]))(e,i);default:return NaN}},set:()=>!1},t=new Proxy({value:1},i),u=new Proxy({value:2},i),l=new Proxy({value:3},i),v=new Proxy({value:5},i),m=new Proxy({value:7},i),s=new Proxy({value:10},i),w=new Proxy({value:12},i),y=new Proxy({value:14},i),x=new Proxy({value:15},i),c=new Proxy({value:20},i),P=new Proxy({value:21},i),d=new Proxy({value:24},i),f=new Proxy({value:25},i),N=new Proxy({value:28},i),g=new Proxy({value:29},i),F=new Proxy({value:30},i),h=new Proxy({value:31},i),H=new Proxy({value:45},i),R=new Proxy({value:48},i),A=new Proxy({value:50},i),T=new Proxy({value:60},i),b=new Proxy({value:90},i),q=new Proxy({value:120},i),E=new Proxy({value:144},i),p=new Proxy({value:240},i),C=new Proxy({value:300},i),I=new Proxy({value:360},i),M=new Proxy({value:500},i),O=({totalTime:n,frameRate:a,actionOnStart:r,actionOnFrame:o,actionOnEnd:i})=>{if(void 0!==n&&(isNaN(n)||n<=0||!Number.isInteger(n)))throw new RangeError('NaN, 0, negative numbers and non-integers are not valid for "totalTime".');if(void 0!==a&&(isNaN(a)||a<=0||!Number.isInteger(a)))throw new RangeError('NaN, 0, negative numbers and non-integers are not valid for "frameRate".');if(void 0!==a&&!isFinite(a))throw new RangeError('Infinity is not valid for "frameRate".');let t=n??1/0,u=0;const l=void 0===a?NaN:a,v=Math.floor(t*l/e);let m=NaN,s=NaN,w=NaN;const y=e=>{t-=e-w,t=Math.max(t,0),w=e},x=e=>{if(y(e),t>0){u+=1;const{continueHandleFrames:n}=o({remainingTime:t,frameCount:u,time:e})??{continueHandleFrames:!0};if(n)return void(m=requestAnimationFrame(x))}i&&i()},c=n=>{if(y(n),t>0){const a=Math.floor((n-s)*l/e)+1;if(a>u){u=a;const{continueHandleFrames:e}=o({remainingTime:t,frameCount:u,time:n})??{continueHandleFrames:!0};if(!e)return void(i&&i())}if(u<v)return void(m=requestAnimationFrame(c))}i&&i()};return m=requestAnimationFrame((e=>{r&&r(),u+=1;const{continueHandleFrames:n}=o({remainingTime:t,frameCount:u,time:e})??{continueHandleFrames:!0};n?(s=e,w=e,m=requestAnimationFrame(isNaN(l)?x:c)):i&&i()})),()=>{cancelAnimationFrame(m)}};export{o as day,x as fifteen,A as fifty,v as five,M as fiveHundred,R as fortyEight,H as fortyFive,y as fourteen,r as hour,a as minute,b as ninety,t as one,E as oneHundredFortyFour,q as oneHundredTwenty,O as requestAnimationFrames,n as second,m as seven,T as sixty,s as ten,F as thirty,h as thirtyOne,l as three,C as threeHundred,I as threeHundredSixty,w as twelve,c as twenty,N as twentyEight,f as twentyFive,d as twentyFour,g as twentyNine,P as twentyOne,u as two,p as twoHundredForty};
//# sourceMappingURL=ticker.js.map
